// Code generated by goctl. DO NOT EDIT.
// Source: post.proto

package server

import (
	"context"

	"github.com/xh-polaris/meowchat-post-rpc/internal/logic"
	"github.com/xh-polaris/meowchat-post-rpc/internal/svc"
	"github.com/xh-polaris/meowchat-post-rpc/pb"
)

type PostServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedPostServer
}

func NewPostServer(svcCtx *svc.ServiceContext) *PostServer {
	return &PostServer{
		svcCtx: svcCtx,
	}
}

func (s *PostServer) GetManyPost(ctx context.Context, in *pb.GetManyPostReq) (*pb.GetManyPostResp, error) {
	l := logic.NewGetManyPostLogic(ctx, s.svcCtx)
	return l.GetManyPost(in)
}

func (s *PostServer) GetPost(ctx context.Context, in *pb.GetPostReq) (*pb.GetPostResp, error) {
	l := logic.NewGetPostLogic(ctx, s.svcCtx)
	return l.GetPost(in)
}

func (s *PostServer) AddPost(ctx context.Context, in *pb.AddPostReq) (*pb.AddPostResp, error) {
	l := logic.NewAddPostLogic(ctx, s.svcCtx)
	return l.AddPost(in)
}

func (s *PostServer) UpdatePost(ctx context.Context, in *pb.UpdatePostReq) (*pb.UpdatePostResp, error) {
	l := logic.NewUpdatePostLogic(ctx, s.svcCtx)
	return l.UpdatePost(in)
}

func (s *PostServer) DeletePost(ctx context.Context, in *pb.DeletePostReq) (*pb.DeletePostResp, error) {
	l := logic.NewDeletePostLogic(ctx, s.svcCtx)
	return l.DeletePost(in)
}
